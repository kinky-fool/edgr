#!/bin/bash

min=50
max=180
pace="$min"
direction='up'
race_to_max=0
drop_to_half=0

program="/tmp/ctronome.$$"

main() {
  # If pace is at half of the maximum or below
  if [[ "$pace" -le $(((max-min) / 2 + min )) ]]; then
    if [[ "$direction" == 'down' && $((RANDOM%4)) -eq 0 ]]; then
      echo "# Going up!"
      direction='up'
    fi
    if [[ $((RANDOM%6)) -eq 0 ]]; then
      echo "# Racing to $max BPM"
      race_to_max=1
    fi
    if [[ "$pace" -le $(((max-min) / 4 + min)) ]]; then
      if [[ $((RANDOM%8)) -eq 0 ]]; then
        echo "# Minimum pace set to $pace BPM"
        min="$pace"
      fi
    fi
  else
    # If pace is higher than 3/4 max
    if [[ "$pace" -ge $(( ((max-min) / 4) * 3 + min )) ]]; then
      if [[ "$direction" == 'up' && $((RANDOM%4)) -eq 0 ]]; then
        echo "# Going down..."
        direction='down'
      fi
    fi
    if [[ $direction == 'up' && \
          "$pace" -eq "$max" || $((RANDOM%6)) -eq 0 ]]; then
      echo "# Dropping to half..."
      drop_to_half=1
    fi
  fi

  if [[ "$pace" -ge "$max" ]]; then
    direction='down'
  fi

  if [[ "$pace" -le "$min" ]]; then
    direction='up'
  fi

  delta=0
  for i in $(seq 1 $((RANDOM%2 + 2))); do
    delta=$((delta + RANDOM%20))
  done

  new_pace=$((pace + delta))
  if [[ "$((RANDOM%6))" == 0 ]]; then
    # Randomly go down
    new_pace=$((pace - (delta + 20)))
  fi

  if [[ "$direction" == 'down' ]]; then
    new_pace=$((pace - (delta + 20)))
  else
    if [[ "$((RANDOM%6))" == 0 ]]; then
      # Randomly go up
      new_pace=$((pace + delta))
    fi
  fi

  if [[ "$new_pace" -ge "$max" ]]; then
    new_pace="$max"
  fi

  if [[ "$new_pace" -le "$min" ]]; then
    min=$((min + 10))
    new_pace="$min"
  fi

  build=0
  steady=0
  while [[ $((build + steady)) -le 45 || $((build + steady)) -gt 120 ]]; do
    build=$((RANDOM%10 + RANDOM%20 + RANDOM%30 + 3))
    steady=$((RANDOM%15 + RANDOM%15 + RANDOM%15 + 3))
  done

  if [[ "$race_to_max" -eq 1 ]]; then
    new_pace=$max
    build=$((new_pace - pace))
    steady=$((RANDOM%10 + RANDOM%20 + RANDOM%30 + 3))
    race_to_max=0
  fi

  if [[ "$drop_to_half" -eq 1 ]]; then
    new_pace=$(((max-min)/2 + min))
    build=$((RANDOM%6 + RANDOM%6 + RANDOM%6 + 3))
    steady=$((RANDOM%6 + RANDOM%6))
    if [[ $((RANDOM%4)) -eq 0 ]]; then
      race_to_max=1
    fi
    drop_to_half=0
  fi

  echo "# start: $pace end: $new_pace period: ${build}s steady: ${steady}s"
  change-pace -s $pace -e $new_pace -p $build -S $steady
  pace=$new_pace
  step_max=5
}

for i in $(seq 1 $1); do
  main
done

#for i in $(seq 1 6); do
#  if [[ $((RANDOM%3)) -ne 0 ]]; then
#    for i in $(seq 1 $((RANDOM%5+2))); do
#      main
#    done
#    # Green Light
#    printf "# Green Light\n5 350/4 2/8\n1 120/4 2/8\n5 350/4 2/8\n"
#    for i in $(seq 1 $((RANDOM%2+1))); do
#      main
#    done
#    # Yellow Light
#    printf "# Yellow Light\n5 350/4 2/8\n1 120/4 2/8\n"
#  fi
#done
