#!/usr/bin/perl

use strict;
use warnings;
use Sessions;

my $image   = $ARGV[0];
my $now     = time();
my $message = '';

my $config_file = "$ENV{HOME}/.config/sessions";
my $config      = read_config("$config_file");
my $state       = read_config("$$config{state_file}");

my $until_end   = $$state{time_elapsed} - (time() - $$state{time_start});
my $matches     = $$state{matches};

# Check image filename for match
my $match = 0;

my $match_dirs = "$$state{image_match_dirs}:$$state{image_bonus_dirs}";
foreach my $dir (split(/:/,"$match_dirs")) {
  my ($img_dir) = $image =~ m|^(.*/)[^/]+$|;
  if ($img_dir =~ m|^$dir|) {
    $match = 1;
  }
}

my $add_lube  = 0;
my $add_time  = 0;

# Penalize for gaps between matching images
$$state{matches_gap}++;

my $max_gap = $$state{matches_max} - $matches + 1;

for my $save (1 .. $$state{saves}) {
  if ($$state{matches_gap} > $max_gap) {
    if ($matches > 1) {
      $matches--;
    }
  }
  #$max_gap += $save;
  $max_gap++;
}

if ($matches > 0 and $$state{matches_gap} > $max_gap) {
  $$state{icy_bonus}++;
  if ($$state{icy_active} < 0) {
    $$state{icy_active} = 0;
  }
  $$state{icy_active} += $$state{icy_bonus};
  $matches = 0;
}

# Initialize lube settings
my $icy_enabled   = 1;
my $lube_enabled  = 1;

if ($$state{lube_break} > 0) {
  $lube_enabled = 0;
}

if ($$state{icy_active} < 0) {
  $$state{icy_active} = 0;
}

if ($$state{icy_break} > 0 or
    $$state{icy_armed} == 0 or
    $$state{icy_active} == 0)  {
  $icy_enabled = 0;
}

if ($match) {
  # The gap between matched pictures is now 0
  $$state{matches_gap} = 0;

  # Is this a bonus match?
  my $bonus = 0;
  foreach my $dir (split(/:/,$$state{image_bonus_dirs})) {
    my ($img_dir) = $image =~ m|^(.*/)[^/]+$|;
    if ($img_dir =~ m|^$dir|) {
      $bonus = 1;
    }
  }

  # Not in the loop above because this shouldn't be looped
  if ($bonus) {
    $$state{lube_break} -= $$state{lube_drop_bonus};
    $$state{icy_break} -= $$state{icy_drop_bonus};
    $matches++;
    if (!int(rand(4)) && $icy_enabled && $$state{icy_active} == 1) {
      $add_lube++;
    }
  }

  my @chances = split(/ /,$$state{chances});
  my $chance = $chances[$matches];

  if ($icy_enabled > 0 || $bonus > 0) {
    $chance = $chance / 2;
  }

  if ($lube_enabled) {
    if (int(rand($chance)) == 1) {
      $add_lube++;
    }
  }

  if ($icy_enabled && $bonus) {
    $chance = $chance * 2 / 3;
    if (int(rand($chance)) == 1) {
      $add_lube++;
    }
  }

  if ($matches > $$state{matches_max}) {
    $matches = 0;

    if (!int(rand(4)) && ($icy_enabled || $lube_enabled)) {
      $add_lube++;
    }

    if ($add_lube && ($icy_enabled || $lube_enabled)) {
      if (!int(rand(3))) {
        $add_time++;
      }
    } else {
      $add_time++;
    }
  }

  # Update tracked count
  $$state{matches} = $matches;
}

if ($add_lube) {
  if ($until_end < $$state{time_for_lube}) {
    $add_time++;
  }

  if ($icy_enabled and $add_lube > 1) {
    my $dice_roll = int(rand(6)) + int(rand(6)) + 2;

    if ($dice_roll == 2) {
      $add_lube++;
    }

    if ($dice_roll == 7 || $dice_roll % 2 == 0) {
      if (!int(rand(3))) {
        $icy_enabled = 0;
      } else {
        $add_lube = 1;
      }
    }
  }

  if ($icy_enabled) {
    $$state{matches} = 0;
    $$state{icy_break} = $$state{icy_per_break};
    $message = "lube up your cock...\n    ...with Icy Hot";

    if ($add_lube > 2) {
      $message = "coat your cock with Icy Hot";
    } elsif ($add_lube == 2) {
      $message = "lube up your cock...\n    ...with Icy Hot";
    }
  } elsif ($lube_enabled) {
    $$state{lube_break} = $$state{lube_per_break};
    $message = "lube up your cock";
  }
}

if ($add_time) {
  my $time_to_add = $$state{time_elapsed} * ($$state{time_bonus_pct} / 100);
  my $extra_time = 0;
  while ($time_to_add > $extra_time) {
    $extra_time += extend_session($state);
  }

  if ($message eq '') {
    $message = "enjoy some more stroking";
  } else {
    $message = "$message...\n    and stroke a bit longer";
  }
}

if ($message ne '') {
  printf "  Mistress says %s\n", $message;
} else {
  if ($icy_enabled) {
    printf "  Icy: %i\n", $$state{icy_active};
  }

  if ($matches) {
    printf "  %i\n", $matches;
  }
}

# Decrement various counters
$$state{icy_active}--;
$$state{icy_break}--;
$$state{lube_break}--;

write_config($$state{state_file},$state);
