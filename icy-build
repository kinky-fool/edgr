#!/bin/bash

add_time() {
  icy_active=$1

  max_pace=185
  min_pace=95
  pacesetter="$HOME/toys/change-pace"
  prog='/tmp/stroke-session'
  final_pace=$(grep -v ^# "$prog" | tail -n1 | awk -F'[ /]' '{print $2}')
  down_pace=$((max_pace - (RANDOM % 30 + 1)))
  if [[ $down_pace -lt $min_pace ]]; then
    down_pace=$min_pace
  fi
  bonus_time=$((RANDOM % 30 + RANDOM % 30))
  a=$((RANDOM%6))
  b=$((RANDOM%6))
  c=$((RANDOM%6))
  bonus_time=10
  if [[ $a -eq 1 ]]; then
    bonus_time=$((bonus_time + (RANDOM % 20)))
  fi
  if [[ $a -eq $b ]]; then
    bonus_time=$((bonus_time + (RANDOM % 30)))
  fi
  if [[ $a -eq $b && $a -eq $c ]]; then
    bonus_time=$((bonus_time + (RANDOM % 30)))
  fi
  if [[ "$icy_active" -gt 0 ]]; then
    count=$($HOME/bin/fuzzify 8)
    echo "#icy $count" >> "$prog"
  fi
  # Go Down
  $pacesetter -s "$final_pace" -e "$down_pace" -p 5 -S 1 >> "$prog"
  # Go Up
  $pacesetter -s "$down_pace" -e "$max_pace" -p 5 -S "$bonus_time" >> "$prog"
}

image=$1
delay=$2

delay_int=$(printf "%.0f" "$delay")
if [[ $(echo "$delay_int == $delay" | bc) -eq 0 ]]; then
  delay_int=$((delay_int + 1))
fi

count_file=/tmp/icy-count

icy_active=0
if [[ -e '/tmp/icy-pics' ]]; then
  icy_pics=$(</tmp/icy-pics)
  if [[ $icy_pics -gt 0 ]]; then
    icy_active=1
    echo $((icy_pics - 1)) > /tmp/icy-pics
  fi
fi

message=
source ~/.config/sexy-slideshow

if [[ ! -e "$count_file" ]]; then
  printf '0\n' > "$count_file"
fi

now=$(date +"%s")
last=$(stat -c "%Y" "$count_file")
count=$(cat "$count_file")
#timeout=$((delay_int * (3 + ( (10 - count) / 2 ) ) ))
timeout=$((delay_int * (3 + (10 - count))))

passed=$((now - last))
while [[ $passed -gt $timeout && $count -gt 0 ]]; do
  count=$((count - 1))
  passed=$((passed - timeout))
  timeout=$(((delay_int * (3 + (10 - count))) / 4))
done

extend=0
for dir in $edge_pics $safe_pics; do
  if [[ "${image%/*}" == "${dir%/*}" ]]; then
    extend=1
    lube=1
  fi
done

edge=0
for dir in $edge_pics; do
  if [[ "${image%/*}" == "${dir%/*}" ]]; then
    edge=1
  fi
done

message=
# Not in loop above; could increment count for more than iteration
if [[ $edge -eq 1 ]]; then
  count=$((count + 1))
fi

if [[ $lube -eq 1 ]]; then
  if [[ $count -le 10 ]]; then
    chances=(85 60 40 25 15 10 15 25 40 60 85 115 150)
    chance=${chances[$count]}
    if [[ $icy_active -ne 0 ]]; then
      chance=$((chance * 2 / 3))
    elif [[ $edge -eq 0 ]]; then
      chance=$((chance * 5 / 4))
    fi
    if [[ $((RANDOM % chance)) -eq 1 ]]; then
      message='lube up your cock'
      if [[ $icy_active -ne 0 ]]; then
        message="${message} ...\n    ... with Icy Hot"
      fi
      newcount=0
      newcount=$((newcount + (RANDOM % (count-newcount+1))))
      newcount=$((newcount + (RANDOM % (count-newcount+1))))
      newcount=$((newcount + (RANDOM % (count-newcount+1))))
      count=$newcount
    fi
  else
    if [[ $((RANDOM % 4)) -eq 1 ]]; then
      message='lube up your cock'
      if [[ $icy_active -ne 0 ]]; then
        message="${message}...\n    ...with Icy Hot"
      fi
      newcount=0
      newcount=$((newcount + (RANDOM % (count-newcount+1))))
      newcount=$((newcount + (RANDOM % (count-newcount+1))))
      count=$newcount
      if [[ $((RANDOM % 6)) -eq $((RANDOM % 6)) ]]; then
        count=$((RANDOM % count))
        message="${message}...\n    ...and enjoy some more time"
        add_time $icy_active
      fi
    else
      message='have some more time'
      add_time $icy_active
      roll1=$((RANDOM%6 + 1))
      roll2=$((RANDOM%6 + 1))
      if [[ $roll1 -eq 1 && $roll2 -eq 1 ]]; then
        add_time $icy_active
        newcount=0
        newcount=$((newcount + (RANDOM % (count-newcount+1))))
        newcount=$((newcount + (RANDOM % (count-newcount+1))))
        count=$newcount
      elif [[ $roll1 -eq $roll2 ]]; then
        count=$((RANDOM % (count+1)))
      elif [[ $((roll1 + roll2)) -eq 7 ]]; then
        count=$((RANDOM % 6))
      elif [[ $(((roll1 + roll2) % 2)) -eq 1 ]]; then
        count=$((count - (RANDOM % count)))
      else
        count=0
      fi
    fi
  fi
fi

if [[ -n "$message" ]]; then
  echo -e "  Mistress says $message"
elif [[ $count -gt 0 ]]; then
  printf '  %i\n' $count
fi

if [[ $extend -eq 1 ]]; then
  printf '%i\n' $count > "$count_file"
fi
