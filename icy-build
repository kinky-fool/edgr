#!/usr/bin/perl

use strict;
use warnings;
use Sessions;

my $image   = $ARGV[0];
my $now     = time();
my $message = '';

my $config_file = "$ENV{HOME}/.config/sessions";
my $config      = read_config("$config_file");
my $state       = read_config("$$config{state_file}");

my $until_end   = $$state{time_elapsed} - (time() - $$state{time_start});

## Do score stuff

my $score   = 0;

foreach my $dir (split(/:/,$$state{image_prize_dirs})) {
  my ($img_dir) = $image =~ m|^(.*/)[^/]+$|;
  if ($img_dir =~ m|^$dir|) {
    $score = 1;
  }
}

foreach my $dir (split(/:/,$$state{image_bonus_dirs})) {
  my ($img_dir) = $image =~ m|^(.*/)[^/]+$|;
  if ($img_dir =~ m|^$dir|) {
    $score = 2;
  }
}

my $gap_max   = int(($$state{matches_max} - $$state{matches}) / 2 + 1);
my $gap_cur   = $$state{matches_gap};

my $win_prize = 0;
my $add_time  = 0;

if ($score) {
  # The gap between matched pictures is now 0
  $gap_cur = 0;
  $$state{matches_gap} = 0;
  $$state{matches_run}++;
  $$state{matches} = $$state{matches_cur};
  if ($$state{matches} >= $$state{matches_max}) {
    $win_prize++;
    $add_time++;
    if ($score > 1) {
      $$state{matches} = $$state{matches_max};
    } else {
      $$state{matches} = 0;
    }
  } else {
    if ($score > 1) {
      $$state{matches}++;
    }
  }

  foreach my $spin (1 .. $score) {
    my $chance = $$state{prize_chance};

    if ($score > 1) {
      $chance = int($chance * 2 / 3);
    }

    if ($$state{bonus_active} and $$state{bonus_break} == 0) {
      $chance = int($chance * 3 / 4);
    }

    if (int(rand($chance)) == 1) {
      $win_prize++;
    }

    if ($$state{bonus_break} > 0) {
      $$state{bonus_break}--;
    }

    if ($$state{prize_break} > 0) {
      $$state{prize_break}--;
    }
  }

  $$state{matches_cur} = $$state{matches};
} else {
  my $saves = $$state{saves};
  while ($saves > 0 and $gap_cur >= $gap_max) {
    $saves--;

    if ($$state{matches_cur} > 0) {
      $$state{matches_cur}--;
    }

    if ($gap_max > 1) {
      $gap_max--;
    }

    $gap_cur -= $gap_max;
  }

  if ($gap_cur >= $gap_max) {
    $$state{bonus_rank}++;
    $$state{bonus_active} = $$state{bonus_rank};
    $$state{matches_cur} = 0;
  }

  $$state{matches_gap}++;
  $$state{matches_run} = 0;
}

if ($win_prize) {
  if ($until_end < $$state{time_for_lube}) {
    $add_time++;
  }

  if ($$state{bonus_active} and $$state{bonus_break} == 0) {
    $$state{bonus_break} = $$state{bonus_timeout};
    if ($$state{icy_armed}) {
      $message = "lube up your cock...\n    ...with Icy Hot";
      if ($win_prize > 2) {
        $message = "coat your cock with Icy Hot";
      } elsif ($win_prize == 2) {
        $message = "lube up your cock...\n    ...with Icy Hot";
      }

      # Chance to avoid Icy Hot
      if (int(rand(6)) == int(rand(6))) {
        $message = "lube up your cock";
      }

      if (int(rand(6)) == 1) {
        $add_time++;
      }
    } else {
      $add_time++;
    }
  } elsif ($$state{prize_break} == 0) {
    $$state{prize_break} = $$state{prize_timeout};
    $message = "lube up your cock";
  }

  if ($add_time) {
    my $time_added  = 0;
    my $time_to_add = 0;

    for (1 .. $add_time) {
      $time_to_add += $$state{time_elapsed} * ($$state{time_bonus_pct} / 100);
    }

    while ($time_to_add > $time_added) {
      $time_added += extend_session($state);
    }

    if ($message eq '') {
      $message = "enjoy some more stroking";
    } else {
      $message = "$message...\n    and stroke a bit longer";
    }
  }
}

if ($message ne '') {
  printf "  Mistress says %s\n", $message;
}

my $icy_con = '---';
$icy_con =~ s/-/+/ if ($$state{icy_armed});
$icy_con =~ s/-/+/ if ($$state{bonus_active});
$icy_con =~ s/-/+/ if ($$state{bonus_break} == 0);

printf "  $icy_con  ";

printf '+' x $$state{matches_cur};
printf '-' x ($$state{matches_max} - $$state{matches_cur});
printf '  ';

my $can_miss = 0;
if ($gap_max > $gap_cur) {
  $can_miss = $gap_max - $gap_cur;
}

printf '+' x $can_miss;
printf "\n";

if ($score) {
  $$state{bonus_active}-- if ($$state{bonus_active} > 0);
}

write_config($$state{state_file},$state);
