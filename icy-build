#!/usr/bin/perl

use strict;
use warnings;
use Sessions;

my $image   = $ARGV[0];
my $now     = time();
my $message = '';

my $config_file = "$ENV{HOME}/.config/sessions";
my $config      = read_config("$config_file");
my $state       = read_config("$$config{state_file}");

my $until_end   = $$state{time_elapsed} - (time() - $$state{time_start});
my $matches     = $$state{matches};

# Check image filename for match
my $match = 0;

my $match_dirs = "$$state{image_match_dirs}:$$state{image_bonus_dirs}";
foreach my $dir (split(/:/,"$match_dirs")) {
  my ($img_dir) = $image =~ m|^(.*/)[^/]+$|;
  if ($img_dir =~ m|^$dir|) {
    $match = 1;
  }
}

my $add_lube  = 0;
my $add_time  = 0;

# Penalize for gaps between matching images
$$state{matches_gap}++;

my $max_gap = $$state{matches_max} - $matches + 2;

for my $save (1 .. $$state{saves}) {
  if ($$state{matches_gap} > $max_gap) {
    if ($matches > 1) {
      $matches--;
    }
  }
  #$max_gap += $save;
  $max_gap++;
}

if ($matches > 0 and $$state{matches_gap} > $max_gap) {
  $$state{prize_rank}++;
  $$state{prize_active} += $$state{prize_rank};
  $$state{prize_active} = $$state{prize_rank};
  $matches = 0;
}

if ($match) {
  # The gap between matched pictures is now 0
  $$state{matches_gap} = 0;

  # Is this a bonus match?
  my $bonus_match = 0;
  foreach my $glob (split(/:/,$$state{image_bonus_dirs})) {
    foreach my $dir (glob $glob) {
      my ($img_dir) = $image =~ m|^(.*/)[^/]+$|;
      if ($img_dir =~ m|^$dir|) {
        $bonus_match = 1;
      }
    }
  }

  # Not in the loop above because this shouldn't be looped
  if ($bonus_match) {
    # Decrement counters, again
    $$state{reward_break}--;
    $matches++;
  }

  if ($matches > $$state{matches_max}) {
    $matches  = 0;
    $add_time = 1;
  }

  # Decrement counter
  if ($$state{reward_break} > 0) {
    $$state{reward_break}--;
  } else {
    my @chances = split(/ /,$$state{chances});
    my $chance = $chances[$matches];
    my $spins = 1;

    if ($$state{prize_active} or $bonus_match) {
      $spins++;
    }

    if ($$state{prize_active} and $bonus_match) {
      $spins++;
    }

    if ($$state{prize_active} == 1 and $bonus_match) {
      $spins++;
    }

    for (1 .. $spins) {
      if (int(rand($chance)) == 1) {
        if ($$state{prize_active} and $$state{icy_armed} == 0) {
          if (int(rand($chance) / 2) == 1) {
            $add_lube++;
          } else {
            $add_time++;
          }
        } else {
          $add_lube++;
        }
      }
    }
  }

  # Update tracked count
  $$state{matches} = $matches;
}

if ($add_time or $add_lube) {
  $$state{reward_break} = $$state{break_length};
}

if ($add_lube) {
  if ($until_end < $$state{time_for_lube}) {
    $add_time++;
  }

  my $icy_on = 0;

  if ($$state{prize_active} and $$state{icy_armed}) {
    $icy_on = 1;
  }

  if ($icy_on and $add_lube) {
    my $dice_roll = int(rand(6)) + int(rand(6)) + 2;

    if ($dice_roll == 2) {
      $add_lube++;
    }

    if ($dice_roll == 7 || $dice_roll % 2 == 0) {
      if (!int(rand(3))) {
        $icy_on = 0;
      } else {
        $add_lube = 1;
      }
    }
  }

  if ($icy_on) {
    $$state{prize_active} = 0;
    $message = "lube up your cock...\n    ...with Icy Hot";
    if ($add_lube > 2) {
      $message = "coat your cock with Icy Hot";
    } elsif ($add_lube == 2) {
      $message = "lube up your cock...\n    ...with Icy Hot";
    }
  } else {
    $message = "lube up your cock";
  }
}

if ($add_time) {
  $$state{prize_active} = 0;

  my $time_added  = 0;
  my $time_to_add = 0;

  for (1 .. $add_time) {
    $time_to_add += $$state{time_elapsed} * ($$state{time_bonus_pct} / 100);
  }

  while ($time_to_add > $time_added) {
    $time_added += extend_session($state);
  }

  if ($message eq '') {
    $message = "enjoy some more stroking";
  } else {
    $message = "$message...\n    and stroke a bit longer";
  }
}

if ($message ne '') {
  printf "  Mistress says %s\n", $message;
} else {
  if ($$state{prize_active}) {
    printf "  Prize: %i\n", $$state{prize_active};
    if ($match) {
      $$state{prize_active}--;
    }
  }
  if ($matches) {
    printf "  %i\n", $matches;
  }
}

if ($$state{icy_armed}) {
  printf "  Icy Armed\n";
}

write_config($$state{state_file},$state);
