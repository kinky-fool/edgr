#!/bin/bash

image="$1"
pics_count="$2"
pics="$3"
start_pics="$4"
countdown="$5"
max=300

base_image="${image##*/}"

remains_file="$HOME/.edge_remains"
if [[ ! -e "$remains_file" ]]; then
  echo 0 > "$remains_file"
fi

psych_file="$HOME/.edgr_psych"
psych=0

if [[ -e "$psych_file" ]]; then
  psych=$(< "$psych_file")
fi

edge_after=$(< "$pics_count")
edge_after=$((edge_after - 1))

new_edge=$edge_after
remains=$(< "$remains_file")

edge=0
if [[ "$edge_after" -ge "$max" ]] || [[ "$edge_after" -le 0 ]]; then
  edge=1
fi

counting_down=0

if [[ "$edge_after" -le "$countdown" && "$edge_after" -gt 0 ]]; then
  counting_down=$edge_after
fi

fake_edge=0
if [[ "$edge_after" -le "$((psych + countdown))" && \
      "$edge_after" -gt "$psych" ]]; then
  counting_down=$((edge_after - psych))
  fake_edge=1
fi

points=$(echo "$image" | grep -Eo '[0-9]+pts' | sed -e 's/pts$//')
if [[ "$points" =~ ^[0-9]+$ ]] && [[ "$points" -gt 0 ]]; then
  multiplier=$pics
  mercy=1
  slap=0

  for i in $(seq 1 $points); do
    if [[ $((RANDOM%5)) -lt 3 ]]; then
      slap=$((slap + 1))
    fi
  done

  if [[ "$remains" -gt 0 ]]; then
    for i in $(seq 1 $points); do
      if [[ $((RANDOM%4)) -eq 0 ]]; then
        slap=$((slap + 1))
      fi
    done
    multiplier=$((multiplier + 1))
    for i in {1..6}; do
      if [[ $((RANDOM%3)) -eq 0 ]]; then
        multiplier=$((multiplier + 1))
        mercy=$((mercy + 1))
      fi
    done
  fi

  if [[ "$counting_down" -gt 0 ]]; then
    for i in $(seq 1 $points); do
      if [[ $((RANDOM%3)) -eq 0 ]]; then
        slap=$((slap + 1))
      fi
    done
    pics_done=$((countdown - counting_down + 1))
    multiplier=$((multiplier + 1))
    for i in {1..6}; do
      if [[ $((RANDOM%3)) -eq 0 ]]; then
        multiplier=$((multiplier + 1))
        mercy=$((mercy + 1))
      fi
    done
    for i in {1..4}; do
      if [[ $((RANDOM % i)) -eq 0 ]]; then
        new_edge=$((new_edge + pics_done))
      fi
    done
    remains=$((remains + (new_edge - edge_after)))
  fi

  if [[ "$edge" -ne 0 || "$edge_after" -eq "$psych" ]]; then
    for i in $(seq 1 $points); do
      if [[ $((RANDOM%3)) -eq 0 ]]; then
        slap=$((slap + 1))
      fi
    done
    points=$((points + 2))
    multiplier=$((multiplier + 2))
    for i in {1..6}; do
      if [[ $((RANDOM%3)) -eq 0 ]]; then
        multiplier=$((multiplier + 2))
        mercy=$((mercy + 1))
      fi
    done
    if [[ "$edge_after" -lt 0 ]]; then
      new_edge=$((new_edge + (edge_after * -1 * 3)))
    fi

    new_edge=$((new_edge + countdown))
  fi

  chance=2
  for i in $(seq 1 $mercy); do
    assist=0
    for i in {1..3}; do
      if [[ $((RANDOM % chance)) -eq 0 ]]; then
        multiplier=$((multiplier - 1))
        assist=$((assist + 1))
      fi
    done
    chance=$((chance + assist))
  done

  if [[ "$multiplier" -lt 0 ]]; then
    multiplier=0
  fi

  add_pics=$((points * multiplier))
  new_edge=$((new_edge + add_pics))

  if [[ $((RANDOM % 8)) -eq 0 ]]; then
    new_psych=$((edge_after - 1 - $((RANDOM%4)) - $countdown))
    if [[ "$new_psych" -gt "$psych" ]]; then
      psych=$new_psych
      echo "$psych" > "$psych_file"
    fi
  fi

  if [[ $((new_edge - edge_after)) -gt 20 && $((RANDOM % 6)) -eq 0 ]]; then
    psych=$((new_edge - 2 - $((RANDOM%5)) - $countdown ))
    echo "$psych" > "$psych_file"
  fi

  if [[ $slap -ne 0 ]]; then
    if [[ $slap -eq 1 ]]; then
      printf "   slap balls 1 time\n"
    else
      printf "   slap balls %i times\n" "$slap"
    fi
  fi

  slaps=$(< $HOME/.edgr_slaps)
  slaps=$((slaps + slap))
  echo "$slaps" > "$HOME/.edgr_slaps"

  printf "\n" $((new_edge - edge_after))

  remains=$((remains + (points * multiplier) / 2))

  edge=0
else
  points=0

  if [[ "$edge" -ne 0 ]]; then
    printf "edge\n"
  elif [[ "$edge_after" -ne 0 && "$edge_after" -eq "$psych" ]]; then
    printf "psych!\n"
    rm -f "$psych_file"
  elif [[ "$counting_down" -gt 0 ]]; then
    printf "%4i\n" "$counting_down"
  fi

  if [[ "$remains" -gt 0 ]]; then
    remains=$((remains - 1))
  fi
fi

if [[ $((RANDOM % 15)) -eq 0 && "$psych" -eq 0 ]]; then
  psych=$((edge_after - (1 + countdown + (RANDOM % 10))))
  if [[ "$psych" -gt "$countdown" ]]; then
    echo "$psych" > "$psych_file"
  fi
fi

echo "$remains" > "$remains_file"
echo "$new_edge" > "$pics_count"
