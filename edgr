#!/usr/bin/env python3

import time
import random
from playsound import playsound
import os
import argparse

from signal import signal, SIGINT
from sys import exit
import threading

home_dir = os.environ['HOME']
audio_dir = f'{home_dir}/lib/audio'

# Set here for referencing when signal caught
edges = 0

edge_min = 30
edge_max = 120

slap_die = {'1': 1}
slap_die_sides = 20

green_die = {'1': 1}
green_die_sides = 20

parser = argparse.ArgumentParser()
parser.add_argument(
  '--green',
  action='store_true',
  help='Enable green light'
)

parser.add_argument(
  '--noslaps',
  action='store_true',
  help='Disable slap instructions'
)

args = parser.parse_args()

green = 0
if args.green == 1:
  if random.randint(0,20) != 0:
    green = 1

noslaps = 0
if args.noslaps == 1:
  noslaps = 1

def main():
  global edge_max, edge_min
  global slap_die
  global edges

  edges = roll_dice(3,4,2)

  print("Get ready to edge yourself.")
  play_rand_sound(f'{audio_dir}/start',0)

  time.sleep(random.randint(60,300))

  while edges > 0:
    for foo in range(0,5):
      if random.randint(1,6) == 1:
        play_rand_sound(f'{audio_dir}/laughs',0)
        time.sleep(random.randint(10,40))

    roll = str(random.randint(1,green_die_sides))

    if roll in green_die and green == 1:
      print("Cum for me! (KIDDING - TESTING!)")
      play_rand_sound(f'{audio_dir}/edges',0)
      # TODO: figure out how to have it stop after X seconds, and play a clip
      #       "hands off your cock" or something, instead of waiting for user
      #       to hit enter (like edging)
    else:
      print("Edge for me.")
      play_rand_sound(f'{audio_dir}/edges',0)

    start = time.time()

    input("Press Enter once you get to the edge.")

    elapsed = time.time() - start

    print("Hands off your cock.")
    play_rand_sound(f'{audio_dir}/laughs',0)

    time.sleep(random.randint(15,30))

    if elapsed > edge_max:
      print("Too slow, try again.")
      play_rand_sound(f'{audio_dir}/too-slow',0)
      slap_die[str(random.randint(1,slap_die_sides))] = 1
      for i in range(0,2):
        roll = str(random.randint(1,green_die_sides))
        if roll in green_die:
          del green_die[roll]
    else:
      print("Good boy.")
      play_rand_sound(f'{audio_dir}/good-boy',0)
      green_die[str(random.randint(1,green_die_sides))] = 1
      roll = str(random.randint(1,slap_die_sides))
      if roll in slap_die:
        del slap_die[roll]

      if elapsed > edge_max - 5:
        print("That was close!")
        slap_die[str(random.randint(1,slap_die_sides))] = 1
        green_die[str(random.randint(1,green_die_sides))] = 1
        roll = str(random.randint(1,slap_die_sides))
        if roll in slap_die:
          del slap_die[roll]

      if elapsed < (edge_max / 2):
        green_die[str(random.randint(1,green_die_sides))] = 1

      if elapsed < (edge_max / 4):
        green_die[str(random.randint(1,green_die_sides))] = 1

      if elapsed > 15:
        slap_die[str(random.randint(1,slap_die_sides))] = 1

      if elapsed > 30:
        slap_die[str(random.randint(1,slap_die_sides))] = 1
        roll = str(random.randint(1,green_die_sides))
        if roll in green_die:
          del green_die[roll]

      if elapsed > 60:
        slap_die[str(random.randint(1,slap_die_sides))] = 1
        roll = str(random.randint(1,green_die_sides))
        if roll in green_die:
          del green_die[roll]

      if elapsed > edge_min:
        edge_max = elapsed

      edges = edges - 1

    time.sleep(5)

    roll = str(random.randint(1,slap_die_sides))

    if roll in slap_die and noslaps != 1:
      time.sleep(random.randint(2,8))
      time.sleep(random.randint(2,8))
      count = roll_dice(4,3,2)
      for i in range(0, count):
        play_rand_sound(f'{audio_dir}/hurt',1)
        time.sleep(random.randint(3,7))
      time.sleep(random.randint(3,10))
    else:
      time.sleep(random.randint(5,10))
      time.sleep(random.randint(5,10))

    if edges > 0:
      print("Get ready to edge, stroke yourself!")
      play_rand_sound(f'{audio_dir}/stroke',0)

      prep_time = int(random.choices(
        population  = [15, 30, 45, 60, 90, 120],
        weights     = [10, 20, 40, 40, 30,  20],
        k           = 1
      )[0])

      time.sleep(prep_time)

  print("You may stop stroking your cock.")
  play_rand_sound(f'{audio_dir}/stop',0)

def roll_dice(count, sides, rc):
  dice = []
  for i in range(0, count):
    dice.append(random.randint(1,sides))
  dice.sort(reverse=True)
  paired = dice.count(dice[0])
  if paired == count:
    return sum(dice) * 2
  elif paired > 1:
    return sum(dice)
  else:
    return sum(dice[0:rc])

def play_rand_sound(directory, blocking):
  if os.path.isdir(directory):
    filename = ''

    while not os.path.isfile(f'{directory}/{filename}'):
      filename = random.choice(os.listdir(directory))

    mp3 = f'{directory}/{filename}'
    if blocking == 1:
      playsound(mp3)
    else:
      sound_thread = threading.Thread(target=playsound, args=(mp3,))
      sound_thread.start()
  return

def handler(signal_received, frame):
  print()
  print(f'Aborted with {edges} edges remaining.')
  exit(0)

if __name__ == '__main__':
  # Run handler() when SIGINT received
  signal(SIGINT, handler)

  main()
