#!/bin/bash

playlist=$(mktemp /tmp/sexy-slideshow.XXXX)

safe_pics="$HOME/files/images/sexy/safe/"
edge_pics="$HOME/files/images/sexy/edges/"
seed_pics="$HOME/files/images/sexy/"
rand_pics="$HOME/files/images/ $HOME/files/downloads/images/"

source "$HOME/.config/sexy-slideshow"

safe=10
edge=10
seed=10
rand=10
delay=4

if [[ -n "$1" && "$1" =~ ^[0-9]+$ ]]; then
  safe=$1
fi

if [[ -n "$2" && "$2" =~ ^[0-9]+$ ]]; then
  edge=$2
fi

if [[ -n "$3" && "$3" =~ ^[0-9]+$ ]]; then
  seed=$3
fi

if [[ -n "$4" && "$4" =~ ^[0-9]+$ ]]; then
  rand=$4
fi

if [[ -n "$5" && "$5" =~ ^[0-9\.]+$ ]]; then
  delay=$5
fi

do_cleanup() {
  local pid playlist
  pid=$1
  playlist=$2
  if ps $pid &>/dev/null; then
    kill $pid
  fi
  rm -f "$playlist"
  exit
}

build_pool() {
  count=$1
  src=$2

  # $src is unquoted because it may be a space separated list of directories
  images=$(find $src -regextype awk -iregex '.*\.(jpe?g|nef|png)')

  for i in {1..6}; do
    echo "$images" | shuf -n $count >> "$playlist"
  done
}

build_pool "$safe" "$safe_pics"
build_pool "$edge" "$edge_pics"
build_pool "$seed" "$seed_pics"
build_pool "$rand" "$rand_pics"

#image_checker="$HOME/toys/check-edge"
image_checker="$HOME/toys/icy-build"

/usr/bin/feh --info "$image_checker '%f'" \
  --fontpath "$HOME/.fonts/" \
  --font "FiraSans-Regular/48" \
  --scale-down \
  -Y -F -D $delay \
  -f <(shuf -n 1000 "$playlist") &>/dev/null &
viewer_pid=$!

# Catch C-c or kill TERM (from other scripts ;)
trap "do_cleanup $viewer_pid $playlist" SIGINT SIGTERM

# Loop while waiting for something else to kill us
while ps $viewer_pid &>/dev/null; do
  sleep 1
done

do_cleanup $viewer_pid $playlist
